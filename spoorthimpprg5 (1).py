# -*- coding: utf-8 -*-
"""spoorthimpPrg5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SAbGbPru9CXSkwZoxmCIpWDyH04fuCu_
"""

import pandas as pd 
import pylab as pl 
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn import tree,metrics,model_selection,preprocessing

 

# load the iris data 

df=pd.read_csv('iris.csv') 

df.head(5) 

 

df['species_label'],i=pd.factorize(df['species']) 

df['species'].unique() 

df['species_label'].unique() 

 

 

# select features 
y=df['species_label']
X=df[['sepal.length','sepal.width'] ]   



 

# split data randomly into 70% training and 30% test 
X_train,X_test,y_train,y_test=model_selection.train_test_split(X,y,test_size=0.3,random_state=0)

 

 

# train the decision tree 
dtree=tree.DecisionTreeClassifier(criterion='entropy',max_depth=3)
dtree.fit(X_train,y_train)
# testing the model 
y_pred=dtree.predict(X_test) 
#acuuracy 

accuracy=metrics.accuracy_score(y_test,y_pred) 

print('Accuracy: {:.2f}'.format(accuracy)) 

 
from sklearn.metrics import confusion_matrix

print(confusion_matrix(y_test,y_pred)) 


#increasing the accuracy by changing the max_depth
dt=tree.DecisionTreeClassifier(criterion='entropy',max_depth=6)
dt.fit(X_train,y_train)
y_pred1=dt.predict(X_test)
acc=metrics.accuracy_score(y_test,y_pred1)
print('Accuracy after increasing the depth:{:.2f}'.format(acc))

#changing criterion
dt1=tree.DecisionTreeClassifier(criterion='entropy',max_depth=5)
dt1.fit(X_train,y_train)
y_pred2=dt1.predict(X_test)
ac=metrics.accuracy_score(y_test,y_pred2)
print('Accuracy after using different criterion(gini):{:.3f}'.format(ac))

print("The precision,recall and f1-score:")
#printed precision,recall,f1-scores using builtin function
import sklearn
print(sklearn.metrics.classification_report(y_test,y_pred))